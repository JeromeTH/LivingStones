{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import Summary from\"./Summary\";import\"./Game.css\";import Leaderboard from\"./Leaderboard\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Game=()=>{const{id}=useParams();const navigate=useNavigate();const[game,setGame]=useState(null);const[leaderboard,setLeaderboard]=useState([]);const[damage,setDamage]=useState('');const[socket,setSocket]=useState(null);useEffect(()=>{const fetchGame=async()=>{try{const response=await fetch(window.location.origin+\"/livingstonesapp/game/\".concat(id,\"/\"));if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();setGame(data);setLeaderboard(data.leaderboard);// Open WebSocket connection\nconst ws=new WebSocket(\"ws://\".concat(window.location.host,\"/ws/game/\").concat(id,\"/\"));ws.onopen=()=>{console.log('WebSocket connection opened');};ws.onmessage=e=>{const message=JSON.parse(e.data);setGame(prevGame=>({...prevGame,monster:{...prevGame.monster,blood_level:message.blood_level}}));setLeaderboard(message.leaderboard);};setSocket(ws);}catch(error){console.error('Error fetching game:',error);}};fetchGame();return()=>{if(socket){socket.close();}};},[id]);const attackMonster=async event=>{event.preventDefault();const token=localStorage.getItem('token');try{const response=await fetch(window.location.origin+\"/livingstonesapp/game/\".concat(id,\"/attack/\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)},body:JSON.stringify({damage})});if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();setGame(prevGame=>({...prevGame,monster:{...prevGame.monster,blood_level:data.blood_level},is_active:data.is_active}));// Notify other clients via WebSocket\nif(socket){socket.send(JSON.stringify({blood_level:data.blood_level,is_active:data.is_active,leaderboard:data.leaderboard}));}}catch(error){console.error('Error attacking monster:',error);}};if(!game)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});if(!game.is_active){console.log(\"game is inactive\");return/*#__PURE__*/_jsx(Summary,{});}else{console.log(\"game is active\");return/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-info\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Game ID: \",game.id]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Monster: \",game.monster.name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"blood-level-bar-container\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Blood Level: \",game.monster.blood_level]}),/*#__PURE__*/_jsx(\"div\",{className:\"blood-level-bar\",style:{width:\"\".concat(game.monster.blood_level/100,\"%\")}})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:attackMonster,className:\"attack-form\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Damage:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:damage,onChange:e=>setDamage(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Attack\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"participants\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Participants:\"}),/*#__PURE__*/_jsx(\"ul\",{children:game.participants.map((participant,index)=>/*#__PURE__*/_jsx(\"li\",{children:participant},index))})]})]}),/*#__PURE__*/_jsx(Leaderboard,{leaderboard:leaderboard})]});}};export default Game;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Summary","Leaderboard","jsx","_jsx","jsxs","_jsxs","Game","id","navigate","game","setGame","leaderboard","setLeaderboard","damage","setDamage","socket","setSocket","fetchGame","response","fetch","window","location","origin","concat","ok","Error","data","json","ws","WebSocket","host","onopen","console","log","onmessage","e","message","JSON","parse","prevGame","monster","blood_level","error","close","attackMonster","event","preventDefault","token","localStorage","getItem","method","headers","body","stringify","is_active","send","children","className","name","style","width","onSubmit","type","value","onChange","target","participants","map","participant","index"],"sources":["/Users/jerometh/PycharmProjects/LivingStones/frontend/src/components/Game/Game.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useParams, useNavigate} from 'react-router-dom';\nimport Summary from \"./Summary\";\nimport \"./Game.css\";\nimport Leaderboard from \"./Leaderboard\";\n\nconst Game = () => {\n    const {id} = useParams();\n    const navigate = useNavigate();\n    const [game, setGame] = useState(null);\n    const [leaderboard, setLeaderboard] = useState([]);\n    const [damage, setDamage] = useState('');\n    const [socket, setSocket] = useState(null);\n\n    useEffect(() => {\n        const fetchGame = async () => {\n            try {\n                const response = await fetch(window.location.origin + `/livingstonesapp/game/${id}/`);\n\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n\n                const data = await response.json();\n                setGame(data);\n                setLeaderboard(data.leaderboard);\n\n\n                // Open WebSocket connection\n                const ws = new WebSocket(`ws://${window.location.host}/ws/game/${id}/`);\n                ws.onopen = () => {\n                    console.log('WebSocket connection opened');\n                };\n\n                ws.onmessage = (e) => {\n                    const message = JSON.parse(e.data);\n                    setGame((prevGame) => ({\n                        ...prevGame,\n                        monster: {\n                            ...prevGame.monster,\n                            blood_level: message.blood_level,\n                        },\n                    }));\n                    setLeaderboard(message.leaderboard);\n                };\n                setSocket(ws);\n\n            } catch (error) {\n                console.error('Error fetching game:', error);\n            }\n        };\n\n        fetchGame();\n\n        return () => {\n            if (socket) {\n                socket.close();\n            }\n        };\n    }, [id]);\n\n    const attackMonster = async (event) => {\n        event.preventDefault();\n        const token = localStorage.getItem('token');\n\n        try {\n            const response = await fetch(window.location.origin + `/livingstonesapp/game/${id}/attack/`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`,\n                },\n                body: JSON.stringify({damage}),\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json();\n            setGame((prevGame) => ({\n                ...prevGame,\n                monster: {\n                    ...prevGame.monster,\n                    blood_level: data.blood_level,\n                },\n                is_active: data.is_active,\n            }));\n\n            // Notify other clients via WebSocket\n            if (socket) {\n                socket.send(JSON.stringify({\n                    blood_level: data.blood_level,\n                    is_active: data.is_active,\n                    leaderboard: data.leaderboard\n                }));\n            }\n\n\n        } catch (error) {\n            console.error('Error attacking monster:', error);\n        }\n    };\n\n\n    if (!game) return <div>Loading...</div>;\n\n    if (!game.is_active) {\n        console.log(\"game is inactive\");\n        return (\n            <Summary/>\n        );\n    } else {\n        console.log(\"game is active\");\n        return (\n         <div className=\"game-container\">\n                <div className=\"game-info\">\n                    <h2>Game ID: {game.id}</h2>\n                    <h3>Monster: {game.monster.name}</h3>\n                    <div className=\"blood-level-bar-container\">\n                        <h2>Blood Level: {game.monster.blood_level}</h2>\n                        <div\n                            className=\"blood-level-bar\"\n                            style={{ width: `${game.monster.blood_level/100}%` }}\n                        ></div>\n                    </div>\n                    <form onSubmit={attackMonster} className=\"attack-form\">\n                        <label>\n                            Damage:\n                            <input\n                                type=\"number\"\n                                value={damage}\n                                onChange={(e) => setDamage(e.target.value)}\n                            />\n                        </label>\n                        <button type=\"submit\">Attack</button>\n                    </form>\n                    <div className=\"participants\">\n                        <h4>Participants:</h4>\n                        <ul>\n                            {game.participants.map((participant, index) => (\n                                <li key={index}>{participant}</li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n                <Leaderboard leaderboard={leaderboard} />\n            </div>\n        );\n    }\n\n\n};\n\nexport default Game;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}