{"ast":null,"code":"var _jsxFileName = \"/Users/jerometh/PycharmProjects/LivingStones/frontend/src/components/EndedGames/EndedGames.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Panel from \"../Elements/Panel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Archive = () => {\n  _s();\n  const [endedGames, setEndedGames] = useState([]);\n  useEffect(() => {\n    const fetchEndedGames = async () => {\n      try {\n        const response = await fetch(window.location.origin + '/livingstonesapp/ended-games/');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setEndedGames(data);\n      } catch (error) {\n        console.error('Error fetching ended games:', error);\n      }\n    };\n    fetchEndedGames();\n  }, []);\n  if (endedGames.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No ended games found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Panel, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ended Games\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: endedGames.map(game => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `/game/${game.id}/`,\n            children: game.name ? game.name : `Game ${game.id}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)\n        }, game.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Archive, \"SBksUm1R2/tBnnb4+ag/4fAUvbA=\");\n_c = Archive;\nexport default Archive;\nvar _c;\n$RefreshReg$(_c, \"Archive\");","map":{"version":3,"names":["React","useState","useEffect","Link","Panel","jsxDEV","_jsxDEV","Archive","_s","endedGames","setEndedGames","fetchEndedGames","response","fetch","window","location","origin","ok","Error","data","json","error","console","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","game","href","id","name","_c","$RefreshReg$"],"sources":["/Users/jerometh/PycharmProjects/LivingStones/frontend/src/components/EndedGames/EndedGames.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport Panel from \"../Elements/Panel\";\n\nconst Archive = () => {\n    const [endedGames, setEndedGames] = useState([]);\n\n    useEffect(() => {\n        const fetchEndedGames = async () => {\n            try {\n                const response = await fetch(window.location.origin + '/livingstonesapp/ended-games/');\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const data = await response.json();\n                setEndedGames(data);\n            } catch (error) {\n                console.error('Error fetching ended games:', error);\n            }\n        };\n        fetchEndedGames();\n    }, []);\n\n    if (endedGames.length === 0) {\n        return <div>No ended games found</div>;\n    }\n\n    return (\n        <div>\n            <Panel>\n                <h1>Ended Games</h1>\n                <ul>\n                    {endedGames.map((game) => (\n                        <li key={game.id}>\n                            <a href={`/game/${game.id}/`}>\n                                {game.name ? game.name : `Game ${game.id}`}\n                            </a>\n                        </li>\n                    ))}\n                </ul>\n            </Panel>\n        </div>\n    );\n};\n\nexport default Archive;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAAQC,IAAI,QAAO,kBAAkB;AACrC,OAAOC,KAAK,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,GAAG,+BAA+B,CAAC;QACtF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCV,aAAa,CAACS,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IACDV,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,UAAU,CAACc,MAAM,KAAK,CAAC,EAAE;IACzB,oBAAOjB,OAAA;MAAAkB,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1C;EAEA,oBACItB,OAAA;IAAAkB,QAAA,eACIlB,OAAA,CAACF,KAAK;MAAAoB,QAAA,gBACFlB,OAAA;QAAAkB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBtB,OAAA;QAAAkB,QAAA,EACKf,UAAU,CAACoB,GAAG,CAAEC,IAAI,iBACjBxB,OAAA;UAAAkB,QAAA,eACIlB,OAAA;YAAGyB,IAAI,EAAG,SAAQD,IAAI,CAACE,EAAG,GAAG;YAAAR,QAAA,EACxBM,IAAI,CAACG,IAAI,GAAGH,IAAI,CAACG,IAAI,GAAI,QAAOH,IAAI,CAACE,EAAG;UAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C;QAAC,GAHCE,IAAI,CAACE,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIZ,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACpB,EAAA,CAvCID,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAyCb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}