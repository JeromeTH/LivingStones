{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import Summary from\"./Summary\";import\"./Game.css\";import Leaderboard from\"./Leaderboard\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Game=()=>{const{id}=useParams();const navigate=useNavigate();const[game,setGame]=useState(null);const[leaderboard,setLeaderboard]=useState([]);const[damage,setDamage]=useState('');const[socket,setSocket]=useState(null);useEffect(()=>{const fetchGame=async()=>{try{const response=await fetch(window.location.origin+\"/livingstonesapp/game/\".concat(id,\"/\"));if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();setGame(data);setLeaderboard(data.leaderboard);console.log(data);// Open WebSocket connection\nconst ws=new WebSocket(\"ws://\".concat(window.location.host,\"/ws/game/\").concat(id,\"/\"));ws.onopen=()=>{console.log('WebSocket connection opened');};ws.onmessage=e=>{const message=JSON.parse(e.data);setGame(prevGame=>({...prevGame,npc:{...prevGame.npc,current_blood:message.current_blood}}));setLeaderboard(message.leaderboard);};setSocket(ws);}catch(error){console.error('Error fetching game:',error);}};fetchGame();return()=>{if(socket){socket.close();}};},[id]);const attackNPC=async event=>{event.preventDefault();const token=sessionStorage.getItem('token');try{const response=await fetch(window.location.origin+\"/livingstonesapp/game/\".concat(id,\"/attack/\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)},body:JSON.stringify({damage})});if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();console.log(data);setGame(prevGame=>({...prevGame,npc:{...prevGame.npc,current_blood:data.current_blood},is_active:data.is_active,leaderboard:data.leaderboard}));// Notify other clients via WebSocket\nif(socket){socket.send(JSON.stringify({current_blood:data.current_blood,is_active:data.is_active,leaderboard:data.leaderboard}));}}catch(error){console.error('Error attacking npc:',error);}};if(!game)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});if(!game.is_active){console.log(\"game is inactive\");navigate(\"/game/\".concat(id,\"/summary/\"));}else{console.log(\"game is active\");return/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-info\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Game ID: \",game.id]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"NPC: \",game.npc.name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"blood-level-bar-container\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Blood Level: \",game.npc.current_blood]}),/*#__PURE__*/_jsx(\"div\",{className:\"blood-level-bar\",style:{width:\"\".concat(game.npc.current_blood*100/game.npc.attr.total_blood,\"%\")}})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:attackNPC,className:\"attack-form\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Damage:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:damage,onChange:e=>setDamage(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Attack\"})]})]}),/*#__PURE__*/_jsx(Leaderboard,{leaderboard:leaderboard})]});}};export default Game;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Summary","Leaderboard","jsx","_jsx","jsxs","_jsxs","Game","id","navigate","game","setGame","leaderboard","setLeaderboard","damage","setDamage","socket","setSocket","fetchGame","response","fetch","window","location","origin","concat","ok","Error","data","json","console","log","ws","WebSocket","host","onopen","onmessage","e","message","JSON","parse","prevGame","npc","current_blood","error","close","attackNPC","event","preventDefault","token","sessionStorage","getItem","method","headers","body","stringify","is_active","send","children","className","name","style","width","attr","total_blood","onSubmit","type","value","onChange","target"],"sources":["/Users/jerometh/PycharmProjects/LivingStones/frontend/src/components/Game/Game.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useParams, useNavigate} from 'react-router-dom';\nimport Summary from \"./Summary\";\nimport \"./Game.css\";\nimport Leaderboard from \"./Leaderboard\";\n\nconst Game = () => {\n    const {id} = useParams();\n    const navigate = useNavigate();\n    const [game, setGame] = useState(null);\n    const [leaderboard, setLeaderboard] = useState([]);\n    const [damage, setDamage] = useState('');\n    const [socket, setSocket] = useState(null);\n\n    useEffect(() => {\n        const fetchGame = async () => {\n            try {\n                const response = await fetch(window.location.origin + `/livingstonesapp/game/${id}/`);\n\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n\n                const data = await response.json();\n                setGame(data);\n                setLeaderboard(data.leaderboard);\n                console.log(data);\n\n                // Open WebSocket connection\n                const ws = new WebSocket(`ws://${window.location.host}/ws/game/${id}/`);\n                ws.onopen = () => {\n                    console.log('WebSocket connection opened');\n                };\n\n\n\n\n                ws.onmessage = (e) => {\n                    const message = JSON.parse(e.data);\n                    setGame((prevGame) => ({\n                        ...prevGame,\n                        npc: {\n                            ...prevGame.npc,\n                            current_blood: message.current_blood,\n                        },\n                    }));\n                    setLeaderboard(message.leaderboard);\n                };\n                setSocket(ws);\n\n            } catch (error) {\n                console.error('Error fetching game:', error);\n            }\n        };\n\n        fetchGame();\n\n        return () => {\n            if (socket) {\n                socket.close();\n            }\n        };\n    }, [id]);\n\n    const attackNPC = async (event) => {\n        event.preventDefault();\n        const token = sessionStorage.getItem('token');\n\n        try {\n            const response = await fetch(window.location.origin + `/livingstonesapp/game/${id}/attack/`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`,\n                },\n                body: JSON.stringify({damage}),\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json();\n            console.log(data);\n            setGame((prevGame) => ({\n                ...prevGame,\n                npc: {\n                    ...prevGame.npc,\n                    current_blood: data.current_blood,\n                },\n                is_active: data.is_active,\n                leaderboard: data.leaderboard\n            }));\n\n            // Notify other clients via WebSocket\n            if (socket) {\n                socket.send(JSON.stringify({\n                    current_blood: data.current_blood,\n                    is_active: data.is_active,\n                    leaderboard: data.leaderboard\n                }));\n            }\n\n\n        } catch (error) {\n            console.error('Error attacking npc:', error);\n        }\n    };\n\n\n    if (!game) return <div>Loading...</div>;\n    if (!game.is_active) {\n        console.log(\"game is inactive\");\n        navigate(`/game/${id}/summary/`);\n    } else {\n        console.log(\"game is active\");\n        return (\n         <div className=\"game-container\">\n                <div className=\"game-info\">\n                    <h2>Game ID: {game.id}</h2>\n                    <h3>NPC: {game.npc.name}</h3>\n                    <div className=\"blood-level-bar-container\">\n                        <h2>Blood Level: {game.npc.current_blood}</h2>\n                        <div\n                            className=\"blood-level-bar\"\n                            style={{ width: `${game.npc.current_blood * 100/game.npc.attr.total_blood}%` }}\n                        ></div>\n                    </div>\n                    <form onSubmit={attackNPC} className=\"attack-form\">\n                        <label>\n                            Damage:\n                            <input\n                                type=\"number\"\n                                value={damage}\n                                onChange={(e) => setDamage(e.target.value)}\n                            />\n                        </label>\n                        <button type=\"submit\">Attack</button>\n                    </form>\n                </div>\n                <Leaderboard leaderboard={leaderboard} />\n            </div>\n        );\n    }\n};\n\nexport default Game;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}