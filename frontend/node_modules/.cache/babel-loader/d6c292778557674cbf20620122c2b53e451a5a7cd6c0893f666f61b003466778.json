{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Game=()=>{const{id}=useParams();const navigate=useNavigate();const[game,setGame]=useState(null);const[damage,setDamage]=useState('');const[leaderboard,setLeaderboard]=useState([]);useEffect(()=>{const fetchGame=async()=>{try{const response=await fetch(window.location.origin+\"/livingstonesapp/game/\".concat(id,\"/\"));if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();setGame(data);if(data.game_active===false){fetchLeaderboard();}}catch(error){console.error('Error fetching game:',error);}};fetchGame();},[id]);const fetchLeaderboard=async()=>{const token=localStorage.getItem('token');try{const response=await fetch(window.location.origin+\"/livingstonesapp/game/\".concat(id,\"/leaderboard/\"),{method:'GET',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}});const data=await response.json();setLeaderboard(data.leaderboard);}catch(error){console.error('Error fetching leaderboard:',error);}};const attackMonster=async event=>{event.preventDefault();const token=localStorage.getItem('token');try{const response=await fetch(window.location.origin+\"/livingstonesapp/game/\".concat(id,\"/attack/\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)},body:JSON.stringify({damage})});if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();if(data.game_active===false){setGame(prevGame=>({...prevGame,game_active:false}));fetchLeaderboard();}else{setGame(prevGame=>({...prevGame,monster:{...prevGame.monster,blood_level:data.blood_level}}));}}catch(error){console.error('Error attacking monster:',error);}};if(!game)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});if(!game.game_active){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Game Over\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Leaderboard\"}),/*#__PURE__*/_jsx(\"ul\",{children:leaderboard.map((_ref,index)=>{let[username,totalDamage]=_ref;return/*#__PURE__*/_jsxs(\"li\",{children:[username,\": \",totalDamage]},index);})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/\"),children:\"Go to Home\"})]});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Game ID: \",game.id]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Monster: \",game.monster.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Blood Level: \",game.monster.blood_level]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:attackMonster,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Damage:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:damage,onChange:e=>setDamage(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Attack\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Participants:\"}),/*#__PURE__*/_jsx(\"ul\",{children:game.participants.map((participant,index)=>/*#__PURE__*/_jsx(\"li\",{children:participant},index))})]})]});};export default Game;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","jsx","_jsx","jsxs","_jsxs","Game","id","navigate","game","setGame","damage","setDamage","leaderboard","setLeaderboard","fetchGame","response","fetch","window","location","origin","concat","ok","Error","data","json","game_active","fetchLeaderboard","error","console","token","localStorage","getItem","method","headers","attackMonster","event","preventDefault","body","JSON","stringify","prevGame","monster","blood_level","children","map","_ref","index","username","totalDamage","onClick","name","onSubmit","type","value","onChange","e","target","participants","participant"],"sources":["/Users/jerometh/PycharmProjects/LivingStones/frontend/src/components/Game/Game.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useParams, useNavigate} from 'react-router-dom';\n\nconst Game = () => {\n    const {id} = useParams();\n    const navigate = useNavigate();\n    const [game, setGame] = useState(null);\n    const [damage, setDamage] = useState('');\n    const [leaderboard, setLeaderboard] = useState([]);\n\n    useEffect(() => {\n        const fetchGame = async () => {\n            try {\n                const response = await fetch(window.location.origin + `/livingstonesapp/game/${id}/`);\n\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n\n                const data = await response.json();\n                setGame(data);\n                if (data.game_active === false) {\n                    fetchLeaderboard();\n                }\n            } catch (error) {\n                console.error('Error fetching game:', error);\n            }\n        };\n\n        fetchGame();\n    }, [id]);\n\n    const fetchLeaderboard = async () => {\n        const token = localStorage.getItem('token');\n        try {\n            const response = await fetch(window.location.origin + `/livingstonesapp/game/${id}/leaderboard/`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const data = await response.json();\n            setLeaderboard(data.leaderboard);\n        } catch (error) {\n            console.error('Error fetching leaderboard:', error);\n        }\n    };\n\n    const attackMonster = async (event) => {\n        event.preventDefault();\n        const token = localStorage.getItem('token');\n\n        try {\n            const response = await fetch(window.location.origin + `/livingstonesapp/game/${id}/attack/`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`,\n                },\n                body: JSON.stringify({damage}),\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json();\n            if (data.game_active === false) {\n                setGame((prevGame) => ({\n                    ...prevGame,\n                    game_active: false,\n                }));\n                fetchLeaderboard();\n            } else {\n                setGame((prevGame) => ({\n                    ...prevGame,\n                    monster: {\n                        ...prevGame.monster,\n                        blood_level: data.blood_level,\n                    },\n                }));\n            }\n\n        } catch (error) {\n            console.error('Error attacking monster:', error);\n        }\n    };\n\n\n\n    if (!game) return <div>Loading...</div>;\n\n    if (!game.game_active) {\n        return (\n            <div>\n                <h1>Game Over</h1>\n                <h2>Leaderboard</h2>\n                <ul>\n                    {leaderboard.map(([username, totalDamage], index) => (\n                        <li key={index}>\n                            {username}: {totalDamage}\n                        </li>\n                    ))}\n                </ul>\n                <button onClick={() => navigate(`/`)}>Go to Home</button>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <h2>Game ID: {game.id}</h2>\n            <h3>Monster: {game.monster.name}</h3>\n            <p>Blood Level: {game.monster.blood_level}</p>\n            <form onSubmit={attackMonster}>\n                <label>\n                    Damage:\n                    <input\n                        type=\"number\"\n                        value={damage}\n                        onChange={(e) => setDamage(e.target.value)}\n                    />\n                </label>\n                <button type=\"submit\">Attack</button>\n            </form>\n            <div>\n                <h4>Participants:</h4>\n                <ul>\n                    {game.participants.map((participant, index) => (\n                        <li key={index}>{participant}</li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default Game;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}