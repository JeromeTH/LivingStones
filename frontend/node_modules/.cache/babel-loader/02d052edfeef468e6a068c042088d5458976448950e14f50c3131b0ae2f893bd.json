{"ast":null,"code":"var _jsxFileName = \"/Users/jerometh/PycharmProjects/LivingStones/frontend/src/components/Game/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Summary from \"./Summary\";\nimport \"./Game.css\";\nimport Leaderboard from \"./Leaderboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [game, setGame] = useState(null);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [damage, setDamage] = useState('');\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const fetchGame = async () => {\n      try {\n        const response = await fetch(window.location.origin + `/livingstonesapp/game/${id}/`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setGame(data);\n        setLeaderboard(data.leaderboard);\n\n        // Open WebSocket connection\n        const ws = new WebSocket(`ws://${window.location.host}/ws/game/${id}/`);\n        ws.onopen = () => {\n          console.log('WebSocket connection opened');\n        };\n        ws.onmessage = e => {\n          const message = JSON.parse(e.data);\n          setGame(prevGame => ({\n            ...prevGame,\n            monster: {\n              ...prevGame.monster,\n              blood_level: message.blood_level\n            }\n          }));\n          setLeaderboard(message.leaderboard);\n        };\n        setSocket(ws);\n      } catch (error) {\n        console.error('Error fetching game:', error);\n      }\n    };\n    fetchGame();\n    return () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, [id]);\n  const attackMonster = async event => {\n    event.preventDefault();\n    const token = sessionStorage.getItem('token');\n    try {\n      const response = await fetch(window.location.origin + `/livingstonesapp/game/${id}/attack/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          damage\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setGame(prevGame => ({\n        ...prevGame,\n        monster: {\n          ...prevGame.monster,\n          blood_level: data.blood_level\n        },\n        is_active: data.is_active\n      }));\n\n      // Notify other clients via WebSocket\n      if (socket) {\n        socket.send(JSON.stringify({\n          blood_level: data.blood_level,\n          is_active: data.is_active,\n          leaderboard: data.leaderboard\n        }));\n      }\n    } catch (error) {\n      console.error('Error attacking monster:', error);\n    }\n  };\n  if (!game) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 23\n  }, this);\n  if (!game.is_active) {\n    console.log(\"game is inactive\");\n    navigate(`/game/${id}/summary/`);\n  } else {\n    console.log(\"game is active\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Game ID: \", game.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Monster: \", game.monster.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blood-level-bar-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Blood Level: \", game.monster.blood_level]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blood-level-bar\",\n            style: {\n              width: `${game.monster.blood_level / 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: attackMonster,\n          className: \"attack-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Damage:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: damage,\n              onChange: e => setDamage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Attack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"participants\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Participants:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: game.participants.map((participant, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: participant\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Leaderboard, {\n        leaderboard: leaderboard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 10\n    }, this);\n  }\n};\n_s(Game, \"xGObhLaKhlNz9JO7gxKRc+7P1SM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Summary","Leaderboard","jsxDEV","_jsxDEV","Game","_s","id","navigate","game","setGame","leaderboard","setLeaderboard","damage","setDamage","socket","setSocket","fetchGame","response","fetch","window","location","origin","ok","Error","data","json","ws","WebSocket","host","onopen","console","log","onmessage","e","message","JSON","parse","prevGame","monster","blood_level","error","close","attackMonster","event","preventDefault","token","sessionStorage","getItem","method","headers","body","stringify","is_active","send","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","style","width","onSubmit","type","value","onChange","target","participants","map","participant","index","_c","$RefreshReg$"],"sources":["/Users/jerometh/PycharmProjects/LivingStones/frontend/src/components/Game/Game.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useParams, useNavigate} from 'react-router-dom';\nimport Summary from \"./Summary\";\nimport \"./Game.css\";\nimport Leaderboard from \"./Leaderboard\";\n\nconst Game = () => {\n    const {id} = useParams();\n    const navigate = useNavigate();\n    const [game, setGame] = useState(null);\n    const [leaderboard, setLeaderboard] = useState([]);\n    const [damage, setDamage] = useState('');\n    const [socket, setSocket] = useState(null);\n\n    useEffect(() => {\n        const fetchGame = async () => {\n            try {\n                const response = await fetch(window.location.origin + `/livingstonesapp/game/${id}/`);\n\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n\n                const data = await response.json();\n                setGame(data);\n                setLeaderboard(data.leaderboard);\n\n\n                // Open WebSocket connection\n                const ws = new WebSocket(`ws://${window.location.host}/ws/game/${id}/`);\n                ws.onopen = () => {\n                    console.log('WebSocket connection opened');\n                };\n\n                ws.onmessage = (e) => {\n                    const message = JSON.parse(e.data);\n                    setGame((prevGame) => ({\n                        ...prevGame,\n                        monster: {\n                            ...prevGame.monster,\n                            blood_level: message.blood_level,\n                        },\n                    }));\n                    setLeaderboard(message.leaderboard);\n                };\n                setSocket(ws);\n\n            } catch (error) {\n                console.error('Error fetching game:', error);\n            }\n        };\n\n        fetchGame();\n\n        return () => {\n            if (socket) {\n                socket.close();\n            }\n        };\n    }, [id]);\n\n    const attackMonster = async (event) => {\n        event.preventDefault();\n        const token = sessionStorage.getItem('token');\n\n        try {\n            const response = await fetch(window.location.origin + `/livingstonesapp/game/${id}/attack/`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`,\n                },\n                body: JSON.stringify({damage}),\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json();\n            setGame((prevGame) => ({\n                ...prevGame,\n                monster: {\n                    ...prevGame.monster,\n                    blood_level: data.blood_level,\n                },\n                is_active: data.is_active,\n            }));\n\n            // Notify other clients via WebSocket\n            if (socket) {\n                socket.send(JSON.stringify({\n                    blood_level: data.blood_level,\n                    is_active: data.is_active,\n                    leaderboard: data.leaderboard\n                }));\n            }\n\n\n        } catch (error) {\n            console.error('Error attacking monster:', error);\n        }\n    };\n\n\n    if (!game) return <div>Loading...</div>;\n    if (!game.is_active) {\n        console.log(\"game is inactive\");\n        navigate(`/game/${id}/summary/`);\n    } else {\n        console.log(\"game is active\");\n        return (\n         <div className=\"game-container\">\n                <div className=\"game-info\">\n                    <h2>Game ID: {game.id}</h2>\n                    <h3>Monster: {game.monster.name}</h3>\n                    <div className=\"blood-level-bar-container\">\n                        <h2>Blood Level: {game.monster.blood_level}</h2>\n                        <div\n                            className=\"blood-level-bar\"\n                            style={{ width: `${game.monster.blood_level/100}%` }}\n                        ></div>\n                    </div>\n                    <form onSubmit={attackMonster} className=\"attack-form\">\n                        <label>\n                            Damage:\n                            <input\n                                type=\"number\"\n                                value={damage}\n                                onChange={(e) => setDamage(e.target.value)}\n                            />\n                        </label>\n                        <button type=\"submit\">Attack</button>\n                    </form>\n                    <div className=\"participants\">\n                        <h4>Participants:</h4>\n                        <ul>\n                            {game.participants.map((participant, index) => (\n                                <li key={index}>{participant}</li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n                <Leaderboard leaderboard={leaderboard} />\n            </div>\n        );\n    }\n\n\n};\n\nexport default Game;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}